IF  EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND name ='OrderItemSearch') 
BEGIN
	DROP Procedure OrderItemSearch
END
GO

CREATE Procedure dbo.OrderItemSearch
(
		@OrderItemId				INT		= NULL
	,	@OrderId				INT		= NULL
	,	@OrderRequestId				INT		= NULL
	,	@OrderActionId				INT		= NULL
	,	@OrderTypeId				INT		= NULL
	,	@StrategyId				INT		= NULL
	,	@SecurityId				INT		= NULL
	,	@PortfolioId				INT		= NULL
	,	@ApplicationId						INT	=	 NULL
	,	@AuditId						INT
	,	@AuditDate						DATETIME 					= NULL
	,	@SystemEntityType				VARCHAR(50)					= 'OrderItem'
	,	@ApplicationMode				INT							= NULL
	,	@AddAuditInfo					INT							= 1
	,	@AddTraceInfo					INT							= 0
	,	@ReturnAuditInfo				INT							= 0
)
WITH RECOMPILE
AS
BEGIN


	DECLARE @SystemEntityTypeId AS INT
	SELECT @SystemEntityTypeId = dbo.GetSystemEntityTypeId(@SystemEntityType)


	SELECT 
			a. OrderItemId
		,	a. OrderId
		,	a. SecurityCode
		,	a. Quantity
		,	a. QuantityFilled
		,	a. QuantityOriginal
		,	a. PriceLimit
		,	a. StrategyCode
		,	a. StrategyGroupCode
		,	a. ClassificationCode
		,	a. BbergCode
		,	a. Notes
		,	a. AvgPrice
		,	a. RefPrice
		,	a. TargetBps
		,	a. AutoGeneratedNotes
		,	a. AutoPercentTraded
		,	a. PositionSizeChange
		,	a. SubmissionType
		,	a. PrimaryBrokerCode
		,	a. ExecutingBrokerCode
		,	a. RoutingDestination
		,	a. Description
		,	a. TotalOrderPercent
		,	a. EventDate
		,	a. AutoOrderResultTypeId
		,	a. BbergUniqueId
		,	a. LastOrderStatusId
		,	a. LastModifiedOn
		,	a. ExpireOn
		,	a. RefFxRate
		,	a. OrderRequestId
		,	OrderRequest.Notes AS OrderRequest
		,	a. OrderActionId
		,	OrderAction.OrderActionCode AS OrderAction
		,	a. OrderTypeId
		,	OrderType.Code AS OrderType
		,	a. StrategyId
		,	Strategy.Name AS Strategy
		,	a. SecurityId
		,	Security.Name AS Security
		,	a. PortfolioId
		,	Portfolio.Name AS Portfolio
		,	a. ApplicationId
	INTO		#TempMain
	FROM		dbo.OrderItem a
	INNER JOIN OrderRequest ON OrderRequest.OrderRequestId = a.OrderRequestId
	INNER JOIN OrderAction ON OrderAction.OrderActionId = a.OrderActionId
	INNER JOIN OrderType ON OrderType.OrderTypeId = a.OrderTypeId
	INNER JOIN Strategy ON Strategy.StrategyId = a.StrategyId
	INNER JOIN Security ON Security.SecurityId = a.SecurityId
	INNER JOIN Portfolio ON Portfolio.PortfolioId = a.PortfolioId
	WHERE	a.ApplicationId = ISNULL(@ApplicationId, a.ApplicationId)
	AND		a.OrderItemId = ISNULL(@OrderItemId, a.OrderItemId)
	AND		a.OrderId = ISNULL(@OrderId, a.OrderId)
	AND		a.OrderRequestId = ISNULL(@OrderRequestId, a.OrderRequestId)
	AND		a.OrderActionId = ISNULL(@OrderActionId, a.OrderActionId)
	AND		a.OrderTypeId = ISNULL(@OrderTypeId, a.OrderTypeId)
	AND		a.StrategyId = ISNULL(@StrategyId, a.StrategyId)
	AND		a.SecurityId = ISNULL(@SecurityId, a.SecurityId)
	AND		a.PortfolioId = ISNULL(@PortfolioId, a.PortfolioId)
	ORDER BY	a.OrderItemId ASC

	IF	@ApplicationMode = 1 
	BEGIN
		DELETE FROM #TempMain
		WHERE OrderItemId < 0
	END

	IF @ReturnAuditInfo = 1
	BEGIN

		-- get Audit latest record matching on key, systementitytype
		SELECT	c.EntityKey
			,	MAX(c.AuditHistoryId)	AS 'MaxAuditHistoryId'
		INTO		#HistortyInfo
		FROM 		#TempMain a	
		INNER JOIN	CommonServices.dbo.AuditHistory c ON	c.EntityKey			= a.OrderItemId
		AND		c.SystemEntityId	= @SystemEntityTypeId
		AND		c.AuditActionId		IN (1,2)
		GROUP BY	c.EntityKey	

		-- Get Audit Date and CreatedByPersonId for given records
		SELECT	a.OrderItemId
			,	c.AuditActionId 
			,	c.CreatedDate
			,	c.CreatedByPersonId
			, 	c.CreatedDate					AS	'UpdatedDate'
			,	e.FirstName + ' ' + e.LastName	AS	'UpdatedBy'
			,	d.Name							AS	'LastAction'
		INTO		#HistortyInfoDetails
		FROM		#TempMain a
		INNER JOIN	#HistortyInfo							b ON	b.EntityKey			= a.OrderItemId
		INNER JOIN	CommonServices.dbo.AuditHistory			c ON	c.AuditHistoryId	= b.MaxAuditHistoryId
		INNER JOIN	CommonServices.dbo.AuditAction			d ON	c.AuditActionId 	= d.AuditActionId
		INNER JOIN	AuthenticationAndAuthorization.dbo.ApplicationUser	e ON	c.CreatedByPersonId	= e.ApplicationUserId

		-- Show full details
		SELECT	a.*
			,	b.UpdatedDate
			,	b.UpdatedBy
			,	b.LastAction
		FROM	#TempMain		a
		LEFT JOIN	#HistortyInfoDetails	b ON	a.OrderItemId=b.OrderItemId
		ORDER BY	a.OrderItemId
	END
	ELSE
	BEGIN
		DECLARE @StaticUpdatedDate AS DATETIME
		SET @StaticUpdatedDate = Convert(datetime, '1/1/1900', 103)

		SELECT	a.*
			,	UpdatedDate = @StaticUpdatedDate
			,	UpdatedBy	= 'Unknown'
			,	LastAction	= 'Unknown'
		FROM	#TempMain a	
		ORDER BY	a.OrderItemId
	END

	IF @AddAuditInfo = 1 
	BEGIN
		-- Create Audit Record
		EXEC dbo.AuditHistoryInsert 
				@SystemEntityType	= @SystemEntityType
			,	@EntityKey			= @OrderItemId
			,	@AuditAction		= 'Search'
			,	@CreatedDate		= @AuditDate
			,	@CreatedByPersonId	= @AuditId
	END

END
GO
