<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(TargetDir)\Framework.Components.DataAccess.dll" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".sql" #>
<#+

	void RenderDropStatements(string tableName)
	{
		WriteLine("IF OBJECT_ID ('dbo." + tableName + "') IS NOT NULL");

		PushIndent("\t");
		WriteLine("DROP TABLE dbo." + tableName);
		PopIndent(); 

		WriteLine("GO");

		WriteLine("");
	}

	void RenderCreateStatement(string tableName, Type modelType)
	{
		WriteLine("CREATE TABLE dbo." + tableName);
		WriteLine("(");

			PushIndent("\t");
			var preText = "	";
			var properties = modelType.GetProperties();
			
			var list = new List<KeyValuePair<string, string>>();
			foreach (var propInfo in properties)
			{				
				if(propInfo.Name != "EntityKey")
					list.Add(new KeyValuePair<string, string>(propInfo.Name, propInfo.PropertyType.ToString()));								
			}

			int position = 0;
									
			position=	IndexOf(list,	 "ApplicationId");
			
			KeyValuePair<String, string> p1 = list.ElementAt(position);	
			list.RemoveAt(position);
			list.Insert(1,p1);
			
			list.Add(new KeyValuePair<string, string>("CreatedDate","System.Nullable`1[System.DateTime]"));
			list.Add(new KeyValuePair<string, string>("UpdatedDate","System.Nullable`1[System.DateTime]"));
			list.Add(new KeyValuePair<string, string>("CreatedByAuditId","System.Nullable`1[System.Int32]"));
			list.Add(new KeyValuePair<string, string>("ModifiedByAuditId","System.Nullable`1[System.Int32]"));

			foreach (var propInfo in list)
			{
				
				if(propInfo.Value == "System.Nullable`1[System.Int32]")
				{
					WriteLine(preText + propInfo.Key + "			INT		NOT NULL");
				}
				else if(propInfo.Value == "System.Nullable`1[System.Single]")
				{
					WriteLine(preText + propInfo.Key + "				INT		NOT NULL");
				}
				else if(propInfo.Value == "System.String")
				{
					WriteLine(preText + propInfo.Key + "				VARCHAR(100)		NOT NULL");
				}					
				else if(propInfo.Value == "System.Nullable`1[System.DateTime]")
				{
					WriteLine(preText + propInfo.Key + "				DATETIME		NOT NULL");
				}
				
				preText = ",	";					
				
			}

			PopIndent(); 

		WriteLine(")");

		WriteLine("GO");

	}

	public static int IndexOf(List<KeyValuePair<string, string>> list, string value)
    {        
		int position = 0;
		foreach (var propInfo in list)
			{
				if(propInfo.Key == value)
					break;
				 position++;
			}	

        return position;
    }
#>

<#+
	
	void RenderCreateScript(string tableName, Type modelType)
	{
		RenderDropStatements(tableName);
		RenderCreateStatement(tableName, modelType);
	}	
    
#>