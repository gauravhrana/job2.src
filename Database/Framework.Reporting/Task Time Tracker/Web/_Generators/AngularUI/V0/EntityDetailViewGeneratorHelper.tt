<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ include file="../../MultipleOutputFileHelper.tt" #>
<#@ include file="../../UtilityHelper.tt" #>
<#+

	void AddBreadCrumbForDetailView(string entityName)
	{
		WriteLine("<ol class='breadcrumb'>");
		
			PushIndent("\t");
			WriteLine("<li class='active'>" + InsertSpaceInCamelCase(entityName) + " Details</li>");
			PopIndent();

		WriteLine("</ol>");
	}

	void AddButtonsForDetailView(string entityName)
	{		
		WriteLine(string.Empty);
		WriteLine("<nav class='navbar navbar-default'>");
			
			PushIndent("\t");
			WriteLine("<ul class='nav navbar-nav'>");
				
				PushIndent("\t");
				WriteLine("<li><a data-ng-href='#/{{entityName}}/search' title='Back'><span class='glyphicon glyphicon-circle-arrow-left'></span>Back</a></li>");
				WriteLine("<li><a data-ng-click='delete();'><span class='glyphicon glyphicon-remove'></span>Delete</a></li>");
				PopIndent();

			WriteLine("</ul>");
			PopIndent();

		WriteLine("</nav>");
	}

	void AddInputControlsForDetailView(string entityName)
	{
		WriteLine(string.Empty);
		
		WriteLine("<div class='form-horizontal'>");

			WriteLine(string.Empty);
			PushIndent("\t");
			WriteLine("<div class='form-group'>");
				
				PushIndent("\t");
				WriteLine("<label for='SummaryCode' class='col-sm-2 control-label'>" + InsertSpaceInCamelCase(entityName) + " Id:</label>");
				WriteLine("<div class='col-sm-10'>");
					
					PushIndent("\t");
					WriteLine("{{EntityItem.Id}}");
					PopIndent();

				WriteLine("</div>");
				PopIndent();

			WriteLine("</div>");

			WriteLine(string.Empty);
			WriteLine("<div class='form-group'>");
				
				PushIndent("\t");
				WriteLine("<label for='Name' class='col-sm-2 control-label'>Name:</label>");
				WriteLine("<div class='col-sm-10'>");
					
					PushIndent("\t");
					WriteLine("{{EntityItem.Name}}");
					PopIndent();

				WriteLine("</div>");
				PopIndent();

			WriteLine("</div>");

			WriteLine(string.Empty);
			WriteLine("<div class='form-group'>");
				
				PushIndent("\t");
				WriteLine("<label for='Description' class='col-sm-2 control-label'>Description:</label>");
				WriteLine("<div class='col-sm-10'>");
					
					PushIndent("\t");
					WriteLine("{{EntityItem.Description}}");
					PopIndent();

				WriteLine("</div>");
				PopIndent();

			WriteLine("</div>");

			WriteLine(string.Empty);
			WriteLine("<div class='form-group'>");
				
				PushIndent("\t");
				WriteLine("<label for='ActiveStatusCode' class='col-sm-2 control-label'>Sort Order:</label>");
				WriteLine("<div class='col-sm-10'>");
					
					PushIndent("\t");
					WriteLine("{{EntityItem.SortOrder}}");
					PopIndent();

				WriteLine("</div>");
				PopIndent();

			WriteLine("</div>");
			PopIndent();
	
		WriteLine(string.Empty);
		WriteLine("</div>");

	}

#>

<#+

	void RenderDetailView(string entityName)
	{
		AddBreadCrumbForDetailView(entityName);
		AddButtonsForDetailView(entityName);
		AddInputControlsForDetailView(entityName);
	}	

	void RenderDetailViews(string[] entities)
	{
		if(entities != null && entities.Length > 0)
		{	
			var manager = Manager.Create(Host, GenerationEnvironment);
			foreach(string entityName in entities)
			{	
				manager.StartNewFile("detail" + entityName + ".html");
				this.RenderDetailView(entityName);
			}

			manager.Process(true);
		}
	}

#>