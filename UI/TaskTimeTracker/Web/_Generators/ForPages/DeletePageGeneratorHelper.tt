<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>

<#+

	private void RenderHeadersForHtmlFileForDeletePage(string nameSpace)
	{
		WriteLine("<%@ Page Title=\"Clone\" Language=\"C#\" MasterPageFile=\"~/MasterPages/Site.Master\" ");	
		WriteLine("AutoEventWireup=\"true\" CodeBehind=\"Delete.aspx.cs\" ");	
		WriteLine("Inherits=\"" + nameSpace + ".Delete\" EnableEventValidation=\"false\" %>");	

		WriteLine(string.Empty);
		WriteLine("<%@ Register TagName=\"DetailsControl\" TagPrefix=\"uc\" Src=\"./Controls/Details.ascx\" %>");	
		WriteLine("<%@ MasterType TypeName=\"Framework.UI.Web.BaseClasses.PageSiteMaster\" %>");	

		WriteLine(string.Empty);
		WriteLine("<asp:Content ID=\"Content1\" runat=\"server\" ContentPlaceHolderID=\"SectionName\"></asp:Content>");	
	}

	private void RenderHTMLForHtmlFileForDeletePage(string entityName)
	{
		WriteLine(string.Empty);
		WriteLine("<asp:Content ID=\"BodyContent\" runat=\"server\" ContentPlaceHolderID=\"MainContent\">");
			
			WriteLine(string.Empty);
			PushIndent("\t");
			WriteLine("<div class=\"row\">");
				
				PushIndent("\t");
				WriteLine("<div class=\"col-sm-10\"></div>");
				WriteLine("<div class=\"col-sm-2\">");
					
					PushIndent("\t");
					WriteLine("<asp:CheckBox ID=\"chkVisible\" runat=\"server\" Text=\"Audit History Visible\" ");
					WriteLine("OnCheckedChanged=\"chkVisible_CheckedChanged\" AutoPostBack=\"true\" Enabled=\"true\" Checked=\"true\" />");
					PopIndent();

				WriteLine("</div>");
				PopIndent();

			WriteLine("</div>");
			
			WriteLine(string.Empty);
			WriteLine("<div class=\"row\">");
				
				PushIndent("\t");
				WriteLine("<div class=\"col-sm-12\">    "); 
					
					PushIndent("\t");                   
					WriteLine(entityName + " Details ");                                               
					WriteLine("<div style=\"overflow: auto; height: auto;\">");
						
						PushIndent("\t");
						WriteLine("<asp:PlaceHolder ID=\"plcDetailsList\" runat=\"server\"></asp:PlaceHolder>");
						PopIndent();

					WriteLine("</div>");
					PopIndent();

				WriteLine("</div>");
				WriteLine("<div class=\"col-sm-12\"> ");  
					
					PushIndent("\t");           
					WriteLine("<asp:LinkButton ID=\"btnDelete\" runat=\"server\" Text=\"Delete\" CssClass=\"btn\" OnClick=\"btnDelete_Click\" />");
					WriteLine("<asp:LinkButton ID=\"btnCancel\" runat=\"server\" Text=\"Cancel\" CssClass=\"btn\" OnClick=\"btnCancel_Click\" />");
					PopIndent();

				WriteLine("</div>");
				PopIndent();

			WriteLine("</div>");
			PopIndent();
		
		WriteLine(string.Empty);
		WriteLine("</asp:Content>");
	}

#>
<#+

	private void RenderUsingTagsForCodeBehindForDeletePage(string dataModelNameSpace, string dataManagerNameSpace)
	{

		WriteLine("using System;");
		WriteLine("using System.Collections.Generic;");
		WriteLine("using System.Web.UI;");
		WriteLine("using Framework.Components.Audit;");
		WriteLine("using Framework.Components.DataAccess;");
		WriteLine("using Framework.UI.Web.BaseClasses;");
		WriteLine("using Shared.WebCommon.UI.Web;");
		WriteLine("using " + dataModelNameSpace + ";");
		if(dataModelNameSpace != dataManagerNameSpace)
		{
			WriteLine("using " + dataManagerNameSpace + ";");
		}
	}	

	private void RenderCodeBehindClassForDeletePage(string entityName, string nameSpace)
	{		
		WriteLine(string.Empty);
		WriteLine("namespace " + nameSpace);
		WriteLine("{");
			
			WriteLine(string.Empty);
			PushIndent("\t");
			WriteLine("public partial class Delete : PageDelete");
			WriteLine("{ ");

				WriteLine(string.Empty);
				PushIndent("\t");
				WriteLine("protected override void OnInit(EventArgs e)");
				WriteLine("{");
					
					PushIndent("\t");
					WriteLine("base.OnInit(e);");

					WriteLine(string.Empty);
					WriteLine("PrimaryEntity		= SystemEntity." + entityName + ";		");	
					WriteLine("PrimaryEntityKey	= \"" + entityName + "\";");
					WriteLine("BreadCrumbObject	= Master.BreadCrumbObject;");

					WriteLine(string.Empty);
					WriteLine("DetailsControlPath	= ApplicationCommon.GetControlPath(\"" + entityName + "\", ControlType.DetailsControl);");
					WriteLine("PrimaryPlaceHolder	= plcDetailsList;");
					PopIndent();
								
				WriteLine("}");

				WriteLine(string.Empty);
				WriteLine("protected void btnDelete_Click(object sender, EventArgs e)");
				WriteLine("{");
					
					PushIndent("\t");
					WriteLine("try");
					WriteLine("{");
						
						PushIndent("\t");
						WriteLine("var notDeletableIds = new List<int>();");
						WriteLine("var deleteIndexList = DeleteIds.Split(',');");

						WriteLine(string.Empty);
						WriteLine("foreach (var index in deleteIndexList)");
						WriteLine("{");
							
							PushIndent("\t");
							WriteLine("var data = new " + entityName + "DataModel();");
							WriteLine("data." + entityName + "Id = int.Parse(index);");

							WriteLine(string.Empty);
							WriteLine("if (!" + entityName + "DataManager.IsDeletable(data, SessionVariables.RequestProfile))");
							WriteLine("{");
								
								PushIndent("\t");
								WriteLine("notDeletableIds.Add((int)(data." + entityName + "Id));");
								PopIndent();

							WriteLine("}");
							PopIndent();

						WriteLine("}");

						WriteLine(string.Empty);
						WriteLine("if (notDeletableIds.Count == 0)");
						WriteLine("{");
							
							PushIndent("\t");
							WriteLine("foreach (var index in deleteIndexList)");
							WriteLine("{");
								
								PushIndent("\t");
								WriteLine("var data = new " + entityName + "DataModel();");
								WriteLine("data." + entityName + "Id = int.Parse(index);");

								WriteLine(string.Empty);
								WriteLine("" + entityName + "DataManager.Delete(data, SessionVariables.RequestProfile);");
								PopIndent();

							WriteLine("}");
							PopIndent();

						WriteLine("}");
						WriteLine("else");
						WriteLine("{");

							WriteLine(string.Empty);
							PushIndent("\t");
							WriteLine("var msg = String.Empty;");
							WriteLine("foreach (var id in notDeletableIds)");
							WriteLine("{");
								
								PushIndent("\t");
								WriteLine("if (!string.IsNullOrEmpty(msg))");
								WriteLine("{");
									
									PushIndent("\t");
									WriteLine("msg += \", <br/>\";");
									PopIndent();

								WriteLine("}");
								WriteLine("msg += \"" + entityName + "Id: \" + id + \" has detail records\";");
								PopIndent();

							WriteLine("}");
                    
							WriteLine(string.Empty);
							WriteLine("foreach (string index in deleteIndexList)");
							WriteLine("{");
								
								PushIndent("\t");
								WriteLine("var data = new " + entityName + "DataModel();");
								WriteLine("data." + entityName + "Id = int.Parse(index);");

								WriteLine(string.Empty);
								WriteLine("//" + entityName + "DataManager.DeleteChildren(data, SessionVariables.RequestProfile);");
								WriteLine("" + entityName + "DataManager.Delete(data, SessionVariables.RequestProfile);");
								PopIndent();

							WriteLine("}");
							PopIndent();

						WriteLine("}");

						WriteLine(string.Empty);
						WriteLine("DeleteAndRedirect();");
						PopIndent();

					WriteLine("}");
					WriteLine("catch (Exception ex)");
					WriteLine("{");
						
						PushIndent("\t");
						WriteLine("Response.Write(ex.Message);");
						PopIndent();

					WriteLine("}");
					PopIndent();

				WriteLine("}");

				WriteLine(string.Empty);
				WriteLine("private void DeleteAndRedirect()");
				WriteLine("{");
					
					PushIndent("\t");
					WriteLine("AuditHistoryDataManager.DeleteDataBySystemEntity(DeleteIds, (int)SystemEntity." + entityName + ", SessionVariables.RequestProfile);");
					WriteLine("Response.Redirect(Page.GetRouteUrl(\"" + entityName + "EntityRoute\", new {Action = \"Default\", SetId = true}), false);");
					PopIndent();

				WriteLine("}  ");
				PopIndent();
			
			WriteLine(string.Empty);
			WriteLine("}");
			PopIndent();

		WriteLine("}");
	}

#>
<#+	

	public void GenerateDesignerFileForDeletePage(string nameSpace)
	{
		
		WriteLine("namespace " + nameSpace + " {   "); 
    
			WriteLine(string.Empty);
			PushIndent("\t");
			WriteLine("public partial class Delete { "); 
				
				WriteLine(string.Empty);
				PushIndent("\t");
				WriteLine("protected global::System.Web.UI.WebControls.CheckBox chkVisible; "); 
				WriteLine("protected global::System.Web.UI.WebControls.PlaceHolder plcDetailsList; "); 
				WriteLine("protected global::System.Web.UI.WebControls.LinkButton btnDelete; "); 
				WriteLine("protected global::System.Web.UI.WebControls.LinkButton btnCancel; "); 

				WriteLine(string.Empty);
				WriteLine("public new Framework.UI.Web.BaseClasses.PageSiteMaster Master { "); 
					
					PushIndent("\t");
					WriteLine("get { "); 
						
						PushIndent("\t");
						WriteLine("return ((Framework.UI.Web.BaseClasses.PageSiteMaster)(base.Master)); "); 
						PopIndent();

					WriteLine("} "); 
					PopIndent();

				WriteLine("} "); 
				PopIndent();

			WriteLine("} "); 
			PopIndent();

		WriteLine("} "); 

	}

	public void GenerateHtmlFileForDeletePage(string entityName, string nameSpace)
	{
		RenderHeadersForHtmlFileForDeletePage(nameSpace);
		RenderHTMLForHtmlFileForDeletePage(entityName);
	}

	public void GenerateCodeBehindFileForDeletePage(string entityName, string nameSpace, string dataModelNameSpace, string dataManagerNameSpace)
    {
		RenderUsingTagsForCodeBehindForDeletePage(dataModelNameSpace, dataManagerNameSpace);					
		RenderCodeBehindClassForDeletePage(entityName, nameSpace);
	}

#>