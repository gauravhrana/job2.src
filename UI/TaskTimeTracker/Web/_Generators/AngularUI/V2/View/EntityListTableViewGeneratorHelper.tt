<#@ template language="C#" debug="True" hostspecific="True" #>
<#@ assembly name="System.Data" #>
<#@ assembly name="System.xml" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data.SqlClient" #>
<#@ import namespace="System.Data" #>
<#@ include file="../../../MultipleOutputFileHelper.tt" #>
<#@ include file="../../../UtilityHelper.tt" #>

<#+

	void AddBreadCrumbForListTableView(string entityName)
	{
		WriteLine("<ol class='breadcrumb'>");
		
			PushIndent("\t");
			WriteLine("<li class='active'>" + InsertSpaceInCamelCase(entityName) + " Search</li>");
			PopIndent();

		WriteLine("</ol>");
	}

	void AddSearchControlForListTableView()
	{
		WriteLine(string.Empty);

		WriteLine("<div class='panel panel-info'>");

			WriteLine(string.Empty);
			PushIndent("\t");
			WriteLine("<div class='panel-title bg-info'>");
				
				PushIndent("\t");
				WriteLine("&nbsp;<span class='clickable' data-toggle='collapse' data-target='#pnlSearchParameters'>");
					
					PushIndent("\t");
					WriteLine("<i class='glyphicon glyphicon-chevron-up'></i>");
					PopIndent();

				WriteLine("</span>&nbsp;&nbsp;Search:");
				PopIndent();

			WriteLine("</div>");

			WriteLine(string.Empty);
			WriteLine("<div class='collapse in panel-body' id='pnlSearchParameters'>");

				WriteLine(string.Empty);
				PushIndent("\t");
				WriteLine("<div class='form-horizontal'>");

					PushIndent("\t");
					WriteLine("<div class='form-group' ng-repeat='fcItem in searchFieldConfigurations' ng-switch on='fcItem.ControlType' for='{{fcItem.Name}}'>");
						
						WriteLine(string.Empty);
						PushIndent("\t");
						WriteLine("<ng-form name='searchFieldForm' ng-switch-when='kendoAutoComplete'>");
							
							PushIndent("\t");
							WriteLine("<label class='col-sm-2 control-label'>{{fcItem.FieldConfigurationDisplayName}}:</label>");
							WriteLine("<div class='col-sm-10'>");
								
								PushIndent("\t");
								WriteLine("<input type='text' kendo-auto-complete class='form-control' k-data-source='sourceItem[fcItem.Name]' ng-model='fcItem.Value' style='width: 200px;' />");
								PopIndent();

							WriteLine("</div>");
							PopIndent();

						WriteLine("</ng-form>");

						WriteLine(string.Empty);
						WriteLine("<ng-form name='searchFieldForm' ng-switch-when='kendoCombo'>");
							
							PushIndent("\t");
							WriteLine("<label class='col-sm-2 control-label'>{{fcItem.FieldConfigurationDisplayName}}:</label>");
							WriteLine("<div class='col-sm-10'>");
								
								PushIndent("\t");
								WriteLine("<select  kendo-combo-box class='form-control' k-data-source='sourceItem[fcItem.Name]' k-data-text-field=\"'name'\" k-data-value-field=\"'id'\" ng-model='fcItem.Value' style='width: 200px;' />");
								WriteLine("<a href='{{fcItem.URL}}' target='_blank'><span class='glyphicon glyphicon-eye-open'></span></a> ");
								PopIndent();

							WriteLine("</div>");
							PopIndent();

						WriteLine("</ng-form>");

						WriteLine(string.Empty);
						WriteLine("<ng-form name='searchFieldForm' ng-switch-when='kendoComboGroupBy'>");
							
							PushIndent("\t");
							WriteLine("<label class='col-sm-2 control-label'>{{fcItem.FieldConfigurationDisplayName}}:</label>");
							WriteLine("<div class='col-sm-10'>");
								
								PushIndent("\t");
								WriteLine("<select  kendo-combo-box class='form-control' k-data-source='sourceItem[fcItem.Name]' k-data-text-field=\"'FieldConfigurationDisplayName'\" k-data-value-field=\"'Name'\" ng-model='fcItem.Value' style='width: 200px;' />                   ");
								PopIndent();

							WriteLine("</div>");
							PopIndent();

						WriteLine("</ng-form>");

						WriteLine(string.Empty);
						WriteLine("<ng-form ng-switch-when='datePanel'>");
							
							PushIndent("\t");
							WriteLine("<label class='col-sm-2 control-label'>{{fcItem.FieldConfigurationDisplayName}}:</label>");
							WriteLine("<div class='col-sm-3'>");
								
								PushIndent("\t");
								WriteLine("<select class='form-control' ng-model='fcItem.PreFilledDateItem' ng-change='fillupDate(fcItem)'");
								WriteLine("		ng-options='act for act in preFilledDateItemsList'>");
								WriteLine("</select>");
								PopIndent();

							WriteLine("</div>");
							WriteLine("<div class='col-sm-2'>");
								
								PushIndent("\t");
								WriteLine("<input type='text' class='form-control' ng-model='fcItem.fromDate' placeholder='From {{fcItem.FieldConfigurationDisplayName}}' />");
								//WriteLine("<input type='text' class='form-control jqdatepicker' ng-model='fcItem.fromDate' placeholder='From {{fcItem.FieldConfigurationDisplayName}}' jqdatepicker/>");
								PopIndent();

							WriteLine("</div>");
							WriteLine("<div class='col-sm-2'>");
								
								PushIndent("\t");
								WriteLine("<input type='text' class='form-control' ng-model='fcItem.toDate' placeholder='To {{fcItem.FieldConfigurationDisplayName}}' />");
								//WriteLine("<input type='text' class='form-control jqdatepicker' ng-model='fcItem.toDate' placeholder='To {{fcItem.FieldConfigurationDisplayName}}' jqdatepicker/>");
								PopIndent();

							WriteLine("</div>");
							WriteLine("<div class='col-sm-3'>");

								PushIndent("\t");
								WriteLine("<p class='form-control-static'>({{userDateFormat}})</p>");
								PopIndent();

							WriteLine("</div>");
							PopIndent();

						WriteLine("</ng-form>");
						PopIndent();

					WriteLine(string.Empty);
					WriteLine("</div>");

					WriteLine(string.Empty);
					WriteLine("<div class='form-group'>");
						
						PushIndent("\t");
						WriteLine("<label class='col-sm-2 control-label'></label>");
						WriteLine("<div class='col-sm-10'>");
							
							PushIndent("\t");
							WriteLine("<button type='submit' value='Reset' class='btn btn-default' id='btnReset' ng-click='resetSearchData();'>Reset</button>");
							WriteLine("<button type='submit' value='Search' class='btn btn-default' id='search' ng-click='searchData();'>Search</button>");
							PopIndent();

						WriteLine("</div>");
						PopIndent();

					WriteLine("</div>");
					PopIndent();

				WriteLine("</div>");
				PopIndent();
				WriteLine(string.Empty);

			WriteLine("</div>");
			PopIndent();

		WriteLine("</div>");
	}

	void AddListControlForListTableView()
	{
		WriteLine(string.Empty);
		WriteLine("<div class='panel-title bg-info'>");
			
			PushIndent("\t");
			WriteLine("&nbsp;<div class='pull-right'>");

				PushIndent("\t");
				WriteLine("Columns:");
				WriteLine("<select ng-model='myFcMode' ng-change='reloadFC(myFcMode)' ng-options='fcMode.Name  for fcMode in fcModes  track by fcMode.FieldConfigurationModeId'>");
				WriteLine("</select>");
				PopIndent();

			WriteLine("</div>");
			PopIndent();

		WriteLine("</div>");

		WriteLine(string.Empty);
		WriteLine("<div cg-busy='[promise]'> </div>");

		WriteLine(string.Empty);
		WriteLine("<div class='panel-body'>");
			
			WriteLine(string.Empty);
			PushIndent("\t");
			WriteLine("<div ng-if='groupingLevel == 0'>");
				
				PushIndent("\t");
				WriteLine("<table ng-table='tableParams' class='table table-bordered'>");
					
					PushIndent("\t");
					WriteLine("<tr>");
						
						PushIndent("\t");
						WriteLine("<th ng-repeat='fcColumn in columns' ng-show='fcColumn.visible'>{{fcColumn.displayName}}</th>");
						WriteLine("<th>Actions</th>");
						PopIndent();

					WriteLine("</tr>");
					WriteLine("<tr ng-repeat='dataItem in entityItems'>");
						
						PushIndent("\t");
						WriteLine("<td ng-repeat='column in columns' ng-show='column.visible' class='text-{{column.HorizontalAlignment.toLowerCase()}}'>{{dataItem[column.field]}}</td>");
						WriteLine("<td><a ng-href='#/{{entityUrl}}/save/{{dataItem[PrimaryKey]}}' class='btn btn-default ng-binding btn-xs' ng-class=\"size ? 'btn-' + size : ''\" title='Edit'><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></a> <a ng-href='#/{{entityUrl}}/detail/{{dataItem[PrimaryKey]}}'  class='btn btn-default ng-binding btn-xs' ng-class=\"size ? 'btn-' + size : ''\" title='Detail'><span class='glyphicon glyphicon-eye-open' aria-hidden='true'></span></a></td>");
						PopIndent();

					WriteLine("</tr>");
					PopIndent();

				WriteLine("</table>");
				PopIndent();

			WriteLine("</div>");
			
			WriteLine(string.Empty);
			WriteLine("<tabset ng-if='groupingLevel == 1'>            ");
				
				PushIndent("\t");
				WriteLine("<tab ng-repeat='groupByVal in groupValues' heading='{{groupByVal}}'>");
					
					PushIndent("\t");
					WriteLine("<table ng-table='tableParams' class='table table-bordered'>");
						
						PushIndent("\t");
						WriteLine("<tr>");
							
							PushIndent("\t");
							WriteLine("<th ng-repeat='fcColumn in columns' ng-show='!(fcColumn.field == groupByColumn)'>{{fcColumn.displayName}}</th>");
							WriteLine("<th>Actions</th>");
							PopIndent();

						WriteLine("</tr>");
						WriteLine("<tr ng-repeat='dataItem in groups[groupByVal]'>");
							
							PushIndent("\t");
							WriteLine("<td ng-repeat='column in columns' ng-show='!(column.field == groupByColumn)' class='text-{{column.HorizontalAlignment.toLowerCase()}}'>{{dataItem[column.field]}}</td>");
							WriteLine("<td><a ng-href='#/{{entityUrl}}/save/{{dataItem[PrimaryKey]}}' class='btn btn-default ng-binding btn-xs' ng-class=\"size ? 'btn-' + size : ''\" title='Edit'><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></a> <a ng-href='#/{{entityUrl}}/detail/{{dataItem[PrimaryKey]}}'  class='btn btn-default ng-binding btn-xs' ng-class=\"size ? 'btn-' + size : ''\" title='Detail'><span class='glyphicon glyphicon-eye-open' aria-hidden='true'></span></a></td>");
							PopIndent();

						WriteLine("</tr>");
						PopIndent();

					WriteLine("</table>");
					PopIndent();

				WriteLine("</tab>");
				PopIndent();

			WriteLine("</tabset>");

			WriteLine(string.Empty);
			WriteLine("<tabset ng-if='groupingLevel == 2'>");   
				
				PushIndent("\t");                     
				WriteLine("<tab ng-repeat='groupByVal in groupValues' heading='{{groupByVal}}'>");
					
					PushIndent("\t");
					WriteLine("<tabset>");
						
						PushIndent("\t");
						WriteLine("<tab ng-repeat='subGroupByVal in subGroupValues[groupByVal]' heading='{{subGroupByVal}}'>");
							
							PushIndent("\t");
							WriteLine("<table ng-table='tableParams' class='table table-bordered'>");
								
								PushIndent("\t");
								WriteLine("<tr>");
									
									PushIndent("\t");
									WriteLine("<th ng-repeat='fcColumn in columns' ng-show='!(fcColumn.field == groupByColumn || fcColumn.field == subGroupByColumn)'>{{fcColumn.displayName}}</th>");
									WriteLine("<th>Actions</th>");
									PopIndent();

								WriteLine("</tr>");
								WriteLine("<tr ng-repeat='dataItem in subGroups[groupByVal][subGroupByVal]'>");
									
									PushIndent("\t");
									WriteLine("<td ng-repeat='column in columns' ng-show='!(column.field == groupByColumn || column.field == subGroupByColumn)' class='text-{{column.HorizontalAlignment.toLowerCase()}}'>{{dataItem[column.field]}}</td>");
									WriteLine("<td><a ng-href='#/{{entityUrl}}/detail/{{dataItem[PrimaryKey]}}'>Detail</a> <a ng-href='#/{{entityUrl}}/save/{{dataItem[PrimaryKey]}}'>Edit</a></td>");
									PopIndent();

								WriteLine("</tr>");
								PopIndent();

							WriteLine("</table>");
							PopIndent();

						WriteLine("</tab>");
						PopIndent();

					WriteLine("</tabset>");
					PopIndent();

				WriteLine("</tab>");
				PopIndent();

			WriteLine("</tabset>");
			PopIndent();

		WriteLine("</div>");
	}

	void AddButtonPanelForListTableView()
	{
		WriteLine(string.Empty);
		WriteLine("<nav class='navbar navbar-default'>");
			
			PushIndent("\t");
			WriteLine("<div class='pull-left'>");
				
				PushIndent("\t");
				WriteLine("<button type='submit' value='AdNew' class='btn btn-default' id='Button1' ng-click='addNew();'>Insert</button>");
				WriteLine("<button type='submit' value='Delete' class='btn btn-default' id='Button2'>Delete</button>");
				WriteLine("<button type='submit' value='Update' class='btn btn-default' id='Button3'>Update</button>");
				WriteLine("<button type='submit' value='CommonUpdate' class='btn btn-default' id='Button4'>Common Update</button>");
				WriteLine("<button type='submit' value='InlineUpdate' class='btn btn-default' id='Button5'>Inline Update</button>");
				PopIndent();

			WriteLine("</div>");
			WriteLine("<div class='pull-right'>");
				
				PushIndent("\t");
				WriteLine("<button type='submit' value='SetTest' class='btn btn-default' id='Button6'>Set Test</button>");
				WriteLine("<button type='submit' value='SetReal' class='btn btn-default' id='Button7'>Set Real</button>");
				WriteLine("<button type='submit' value='Renumber' class='btn btn-default' id='Button10'>Renumber</button>");
				PopIndent();

			WriteLine("</div>");
			PopIndent();

		WriteLine("</nav>");
	}

#>

<#+

	void RenderListTableView(string entityName)
	{
		AddBreadCrumbForListTableView(entityName);
		AddSearchControlForListTableView();

		WriteLine(string.Empty);
		WriteLine("<div class='panel panel-info'>");

			PushIndent("\t");
			AddListControlForListTableView();
			AddButtonPanelForListTableView();
			PopIndent();

		WriteLine("</div>");
	}

	void RenderListTableViews(string[] entities)
	{
		if(entities != null && entities.Length > 0)
		{	
			var manager = Manager.Create(Host, GenerationEnvironment);
			foreach(string entityName in entities)
			{	
				manager.StartNewFile("listTable" + entityName + ".html");
				this.RenderListTableView(entityName);
			}

			manager.Process(true);
		}
	}

#>