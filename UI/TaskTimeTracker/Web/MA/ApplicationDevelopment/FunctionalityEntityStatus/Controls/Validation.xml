<DynamicValidators>
  <!--
	This section contains default values for different types validator controls
	-->
  <Defaults>
    <!--
		These are default property values that are common to all validator controls
		-->
    <Common>
      <!--
		These are default property values that are common to all validator controls
		-->
      <Property name="ForeColor" value="Red" />
      <Property name="Display" value="Dynamic" />
      <Property name="EnableViewState" value="False" />
    </Common>
    <!--
		These are default property values specific to the RegularExpression validator
		-->
    <RegularExpression>
      <Property name="Text" value="Allowed chracters are {LegalValues}" />
      <Property name="ErrorMessage" value="{FriendlyName} can only consist of {LegalValues}" />
    </RegularExpression>
    <!--
		These are default property values specific to the RequiredField validator
		-->
    <!--<RequiredField>
      <Property name="InitialValue" value="" />
      <Property name="Text" value="This is a required field" />
      <Property name="ErrorMessage" value="You must enter something for the {FriendlyName}" />
    </RequiredField>-->
  </Defaults>
  <!--
	This section defines the validator groups
	A validator group defines a collection of validators and their properties
	-->
  <!--As there will be a number of user input fields, there will be a set of ValidatorCollection nodes, 
  and these will be held in a single ValidatorSets node of the configuration file.-->
  <ValidatorSets>
    <!--
		This is the collection of validator controls to be used for the Name
		-->
    <!--//The ID attribute of the ValidatorCollection will match the PlaceHolder's ID 
    property on the Web form in order to connect the user input field with the collection 
    of validators that should to be created and applied.-->
    <!--<ValidatorCollection id="dynApplicationId" FriendlyName="ApplicationId"
                         LegalValues="Integers Only"
                         ControlToValidate="txtApplicationId">
      <Validator type="RequiredField" />
      <Validator type="RegularExpression">
        <Property name="ValidationExpression" value="^\d+$" />
      </Validator>-->
    <!--
      <Validator type="Range">
        -->
    <!--
				This is the Rangevalidators
				-->
    <!--
        <Property name="MinimumValue" value="1" />
        <Property name="MaximumValue" value="30" />
        <Property name="Type" value="integer" />
        <Property name="Text" value="Value must be greater than 1 and smaller than 30" />
      </Validator>
    </ValidatorCollection>-->
    <!--
		This is the collection of validator controls to be used for the AssignedTo
		-->
    <!--
		This is the collection of validator controls to be used for the SortOrder
		-->
    
    <ValidatorCollection id="dynSystemEntityTypeId" FriendlyName="SystemEntityTypeId"
                         LegalValues="Alphabets Only"
                         ControlToValidate="txtSystemEntityTypeId">
      <!--As the Validator node has no child nodes, all the property values will be derived
      from those defined in the Defaults node.-->
      <Validator type="RequiredField" />
    </ValidatorCollection>

    <ValidatorCollection id="dynFunctionalityId" FriendlyName="FunctionalityId"
                         LegalValues="Alphabets Only"
                         ControlToValidate="txtFunctionalityId">
      <!--As the Validator node has no child nodes, all the property values will be derived
      from those defined in the Defaults node.-->
      <Validator type="RequiredField" />
    </ValidatorCollection>

    <ValidatorCollection id="dynFunctionalityStatusId" FriendlyName="FunctionalityStatusId"
                         LegalValues="Alphabets Only"
                         ControlToValidate="txtFunctionalityStatusId">
      <!--As the Validator node has no child nodes, all the property values will be derived
      from those defined in the Defaults node.-->
      <Validator type="RequiredField" />
    </ValidatorCollection>

    <ValidatorCollection id="dynFunctionalityPriorityId" FriendlyName="FunctionalityPriorityId"
                         LegalValues="Alphabets Only"
                         ControlToValidate="txtFunctionalityPriorityId">
      <!--As the Validator node has no child nodes, all the property values will be derived
      from those defined in the Defaults node.-->
      <Validator type="RequiredField" />
    </ValidatorCollection>
    
    <!-- ControlToValidate Property validates 'User Control'-->
    <ValidatorCollection id="dynAssignedTo" FriendlyName="AssignedTo"
                         LegalValues="Alphabets Only"
                         ControlToValidate="txtAssignedTo">
      <Validator type="RequiredField" />
      <Validator type="RegularExpression">
        <Property name="ValidationExpression" value= "^[A-Za-z _]*$" />
      </Validator>
    </ValidatorCollection>
    <ValidatorCollection id="dynMemo" FriendlyName="Memo"
                        LegalValues="Integers Only"
                        ControlToValidate="txtMemo">
      <Validator type="RequiredField" />
    </ValidatorCollection>
  </ValidatorSets>
</DynamicValidators>
